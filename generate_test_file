###############################################################
# Generates test data by loading the trained model
#                             April 2020
#          Ravi Konkimalla | University of Pennsylvania
###############################################################


import os
import numpy as np
import torch
import sys
import torch.nn as nn
import tqdm
import time
from config import *

device = torch.device('cuda:0' if torch.cuda.is_available() else 'cpu')

sys.path.append(os.path.join(ARGS_ROOT,'models',ARGS_MODEL_NAME+'/'))
module = __import__(ARGS_MODEL_NAME)
Network = getattr(module,"Net")
model = Network(data_dict) 


def viz_test(model_pth,pgm_dir,output_dir,data_type):

    pgm_dir = 'E:/pgm_output/08/'
    model = torch.load(model_pth)
    model.load_state_dict(torch.load(model_pth))
    model.cuda()
    model.eval()
    print('model loaded')

    pgm_files = os.listdir(pgm_dir)
    num_files = len(pgm_files)
    
    #start_time = time.time()
    
    for file_num in tqdm.tqdm(range(num_files)):
        #print(file_num,'/',num_files)
        pgm_path = pgm_dir + pgm_files[file_num]  
      
        pgm = np.load(pgm_path)
        
        if (data_type == 0):
            input_pgm = torch.from_numpy(pgm[:,:,:5])
        else:
            input_pgm = torch.from_numpy(pgm[:,:,[0,1,2,3,4,6,7,8]])
        pgm_vis = torch.from_numpy(pgm[:,:,:3])
        
        input_pgm = input_pgm.view(1,input_pgm.shape[0],input_pgm.shape[1],input_pgm.shape[2])
        
        inputs = input_pgm.permute(0,3,1,2)
        
        output = model(inputs.cuda(),None,None)  

        preds = torch.argmax(output,axis = 1).view(64,512,1)

        pgm_vis = torch.cat((pgm_vis.float(),preds.float().cpu()),axis = -1)
        
        output_path = output_dir + pgm_files[file_num].split('.')[0]
        np.save(output_path, pgm_vis)


    #print(time.time() - start_time)
    return None

if __name__ == '__main__':
    
    model_type = 'mobileunet'
    models_pth = 'E:/project_522/train_models/'
    model_pth = models_pth + model_type + '.pth'
    data_type = 0
    seq_str_num = '08'
    pgm_dir = 'E:/project_522/Kitti/pgm_output/' + seq_str_num +'/'
    output_dir = 'E:/project_522/Kitti/pgm_test/' + model_type + '/' + seq_str_num + '/'
    
    if not os.path.exists(output_dir):
        os.makedirs(output_dir)
    
    viz_test(model_pth, pgm_dir, output_dir, data_type)
